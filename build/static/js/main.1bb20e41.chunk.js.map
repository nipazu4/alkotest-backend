{"version":3,"sources":["services/dataService.js","reducers/itemReducer.js","reducers/dateReducer.js","reducers/listSizeReducer.js","reducers/sortReducer.js","components/AlkoButtons.js","selectors/drinkSelector.js","components/Drinks.js","components/Menu.js","components/ScrollToTopButton.js","App.js","store.js","index.js"],"names":["console","log","process","baseUrl","getAllDrinks","store","a","axios","get","response","data","drinks","getAllNonDrinks","nondrinks","getLastFetched","date","initialState","initializeItems","dispatch","length","type","itemReducer","state","action","initializeDate","lastFetched","JSON","stringify","dateReducer","setListSize","listSize","listSizeReducer","method","toggleAlcoholic","toggleOrder","searchFilter","setSortMethod","sortReducer","toLowerCase","AlkoButtons","useDispatch","style","position","top","left","margin","display","flexDirection","onClick","orderDrinks","createSelector","sortOptions","items","filter","d","name","includes","alcohol","sort","b","price","localeCompare","reverse","priceperethanolL","priceperL","size","id","slice","Drink","drink","className","src","imgUrl","alt","loading","height","width","colSpan","toFixed","manufacturer","isNaN","description","Items","currentListSize","useSelector","sortedDrinks","dataLength","next","hasMore","endMessage","map","OrderByButtons","placeholder","options","value","label","onChange","option","changeOrder","isSearchable","ToggleAlcohol","isAlcoholic","ToggleOrder","orderDirection","SearchBar","e","event","preventDefault","target","LastFetched","dateString","Date","toLocaleString","Menu","ScrollToTopButton","showUnder","bottom","right","justifyContent","alignItems","backgroundColor","transitionDuration","onHide","duration","color","App","useEffect","Drinks","reducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bb20e41.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconsole.log(`url=${process.env.REACT_APP_BACKEND_URI}`)\r\nconst baseUrl = process.env.REACT_APP_BACKEND_URI\r\n\r\nexport const getAllDrinks = async (store) => {\r\n    const response = await axios.get(baseUrl+store+\"/drinks\")\r\n    return response.data.drinks\r\n}\r\n\r\nexport const getAllNonDrinks = async (store) => {\r\n    const response = await axios.get(baseUrl+store+\"/nondrinks\")\r\n    return response.data.nondrinks\r\n}\r\n\r\nexport const getLastFetched = async (store) => {\r\n    const response = await axios.get(baseUrl+store+\"/date\")\r\n    return response.data.date\r\n}","import { getAllDrinks, getAllNonDrinks } from \"../services/dataService\"\r\n\r\nconst initialState = {\r\n    drinks: [],\r\n    nondrinks: []\r\n}\r\n\r\nconst itemReducer = (state = initialState, action) => {\r\n    //console.log(\"action made\")\r\n    switch(action.type) {\r\n        case \"INIT_ITEMS\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeItems = (store = \"alko\") => {\r\n    return async dispatch => { \r\n        const drinks = await getAllDrinks(store)\r\n        console.log(`drinks: ${drinks.length}`)\r\n\r\n        const nondrinks = await getAllNonDrinks(store)\r\n        console.log(`non-drinks: ${nondrinks.length}`)\r\n\r\n        dispatch({\r\n            type: \"INIT_ITEMS\",\r\n            data: {\r\n                drinks: drinks,\r\n                nondrinks: nondrinks\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default itemReducer","import { getLastFetched } from \"../services/dataService\"\r\n\r\nconst initialState = []\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"INIT_DATE\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeDate = (store = \"alko\") => {\r\n    return async dispatch => {\r\n        const lastFetched = await getLastFetched(store)\r\n        console.log(`last fetched: ${JSON.stringify(lastFetched)}`)\r\n\r\n        dispatch({\r\n            type: \"INIT_DATE\",\r\n            data: lastFetched,\r\n        })\r\n    }\r\n}\r\n\r\nexport default dateReducer","const listSizeReducer = (state = 5, action) => {\r\n    //console.log(`size action made`)\r\n    switch(action.type) {\r\n        case \"SET_LIST_SIZE\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setListSize = (listSize) => {\r\n    //console.log(listSize)\r\n    return {\r\n        type: \"SET_LIST_SIZE\",\r\n        data: listSize\r\n    }\r\n}\r\n\r\nexport default listSizeReducer","const initialState = {\r\n    method: \"price\",\r\n    toggleAlcoholic: true,\r\n    toggleOrder: true,\r\n    searchFilter: \"\",\r\n} //state.sortOptions rakenne\r\n\r\nconst sortReducer = (state = initialState, action) => {\r\n    //console.log(`state now: ${JSON.stringify(state)}`)\r\n\r\n    switch(action.type) {\r\n        case \"method\":\r\n            //console.log(`method: ${action.data}`)\r\n            return {\r\n                ...state,\r\n                method: action.data.toLowerCase()\r\n            }\r\n        case \"toggleAlcoholic\":\r\n            //console.log(`state.toggleAlcoholic: ${state.toggleAlcoholic}`)\r\n            return {\r\n                ...state,\r\n                toggleAlcoholic: !state.toggleAlcoholic\r\n            }\r\n        case \"toggleOrder\":\r\n            //console.log(`state.toggleOrder: ${state.toggleOrder ? \"asc\":\"desc\"}`) //asc=true, desc=false\r\n            return {\r\n                ...state,\r\n                toggleOrder: !state.toggleOrder\r\n            }\r\n        case \"filterSearch\":\r\n            //console.log(`filter now: ${state.searchFilter}`)\r\n            return {\r\n                ...state,\r\n                searchFilter: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setSortMethod = (method) => {\r\n    //console.log(`method:${method}`)\r\n    return {\r\n        type: \"method\",\r\n        data: method\r\n    }\r\n}\r\n\r\nexport const toggleAlcoholic = () => {\r\n    //console.log(`alcohol toggled`)\r\n    return {\r\n        type: \"toggleAlcoholic\"\r\n    }\r\n}\r\n\r\nexport const toggleOrder = () => {\r\n    //console.log(`order toggled`)\r\n    return {\r\n        type: \"toggleOrder\"\r\n    }\r\n}\r\n\r\nexport const filterSearch = (text) => {\r\n    return {\r\n        type: \"filterSearch\",\r\n        data: text\r\n    }\r\n}\r\n\r\nexport default sortReducer","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { initializeItems } from \"../reducers/itemReducer\"\r\nimport { initializeDate } from \"../reducers/dateReducer\";\r\n\r\nconst AlkoButtons = () => {\r\n    const dispatch = useDispatch()\r\n    const alkoButtonBoxStyle = {\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        margin: \"30px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    }\r\n\r\n    const alkoFunction = () => {\r\n        dispatch(initializeDate(\"alko\"))\r\n        dispatch(initializeItems(\"alko\"))\r\n    }\r\n\r\n    const superAlkoFunction = () => {\r\n        dispatch(initializeDate(\"superalko\"))\r\n        dispatch(initializeItems(\"superalko\"))\r\n    }\r\n\r\n    return (\r\n        <div style={alkoButtonBoxStyle}>\r\n            <button onClick={() => alkoFunction()}>Alko</button>\r\n            <button onClick={() => superAlkoFunction()}>SuperAlko</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlkoButtons","import { createSelector } from \"reselect\"\r\n\r\nconst getDrinks = state => state.items.drinks\r\nconst getSortOptions = state => state.sortOptions\r\nconst getListSize = state => state.listSize\r\n\r\nexport const orderDrinks = createSelector(\r\n    [ getSortOptions, getDrinks, getListSize ],\r\n    (sortOptions, drinks, listSize) => {\r\n        //console.log(`sort options: ${JSON.stringify(sortOptions)}`)\r\n\r\n        //Suodatetaan hakukentän tekstin perusteella\r\n        drinks = drinks.filter(d => d.name.toLowerCase().includes(sortOptions.searchFilter.toLowerCase()))\r\n\r\n        //Suodatetaan alkoholipitoisuuden perusteella\r\n        switch(sortOptions.toggleAlcoholic) {\r\n            case true:\r\n                drinks = drinks.filter(d => d.alcohol !== 0)\r\n                break\r\n            case false:\r\n                drinks = drinks.filter(d => d.alcohol === 0)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        //Seuraavana lajittelu valitulla tavalla\r\n        switch(sortOptions.method) {\r\n            case \"price\":\r\n                drinks = drinks.sort((a, b) => b.price - a.price)\r\n                break\r\n            case \"alcohol\":\r\n                drinks = drinks.sort((a, b) => b.alcohol - a.alcohol)\r\n                break\r\n            case \"name\":\r\n                drinks = drinks.sort((a, b) => a.name.localeCompare(b.name)).reverse()\r\n                break\r\n            case \"pple\":\r\n                drinks = drinks.sort((a, b) => b.priceperethanolL - a.priceperethanolL)\r\n                break\r\n            case \"ppl\":\r\n                drinks = drinks.sort((a, b) => b.priceperL - a.priceperL)\r\n                break\r\n            case \"size\":\r\n                drinks = drinks.sort((a, b) => b.size - a.size)\r\n                break\r\n            case \"id\":\r\n                drinks = drinks.sort((a, b) => b.id - a.id)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        //Käännetään lista tarvittaessa\r\n        if (sortOptions.toggleOrder) {\r\n            drinks = drinks.reverse()\r\n        }\r\n\r\n        //Lopuksi määrätään listan koko\r\n        drinks = drinks.slice(0, listSize)\r\n\r\n\r\n        //ja palautetaan lajiteltu lista juomista\r\n        return drinks\r\n    }\r\n)","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nimport { orderDrinks } from \"../selectors/drinkSelector\"\r\nimport { setListSize } from \"../reducers/listSizeReducer\"\r\nimport \"../styles/drinkStyle.css\"\r\n\r\nconst Drink = ({ drink }) => {\r\n\r\n    return (\r\n        <div className=\"drinkContainer\">\r\n            <div className=\"drinkChildDiv drinkImg\">\r\n                <img\r\n                    src={drink.imgUrl}\r\n                    alt={drink.name}\r\n                    loading=\"lazy\"\r\n                    height=\"192\"\r\n                    width=\"160\"\r\n\r\n                />\r\n            </div>\r\n            <div className=\"drinkChildDiv drinkTable\">\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{ width: \"50%\" }}/>\r\n                        <col style={{ width: \"50%\" }}/>\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"2\">{drink.name}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>price:</td>\r\n                            <td>{drink.price.toFixed(2)}€</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>alcohol:</td>\r\n                            <td>{drink.alcohol}%</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>manufacturer:</td>\r\n                            <td>{drink.manufacturer}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>volume:</td>\r\n                            <td>{drink.size} L</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>price per L of ethanol:</td>\r\n                            <td>\r\n                                {isNaN(drink.priceperethanolL) ? drink.priceperethanolL : drink.priceperethanolL.toFixed(2)}{isNaN(drink.priceperethanolL) ? \"\":\"€\"}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>type:</td>\r\n                            <td>{drink.type}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"drinkChildDiv drinkDescription\">\r\n                {drink.description}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Items = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const currentListSize = useSelector(state => state.listSize)\r\n    const sortedDrinks = useSelector(orderDrinks)\r\n    //console.log(`showing ${sortedDrinks.length} drinks`)\r\n\r\n    const showMoreDrinks = () => {\r\n        dispatch(setListSize(currentListSize + 20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"drinkList\">\r\n            <InfiniteScroll\r\n                dataLength={sortedDrinks.length}\r\n                next={showMoreDrinks}\r\n                hasMore={true}\r\n                endMessage={<h1>this is the end</h1>}\r\n            >\r\n                {sortedDrinks.map(d => \r\n                    <Drink \r\n                        drink={d}\r\n                        key={d.id}\r\n                    />  \r\n                )}\r\n            </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items","import React from \"react\"\r\nimport { filterSearch, setSortMethod, toggleAlcoholic, toggleOrder } from \"../reducers/sortReducer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Select from \"react-select\"\r\nimport { setListSize } from \"../reducers/listSizeReducer\"\r\nimport \"../styles/Menu.css\"\r\n\r\nconst OrderByButtons = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const options = [\r\n        { value: \"name\", label: \"name\" },\r\n        { value: \"price\", label: \"price\" },\r\n        { value: \"alcohol\", label: \"alcohol content\" },\r\n        { value: \"pple\", label: \"price per litre of pure ethanol\" },\r\n        { value: \"ppl\", label: \"price per litre\" },\r\n        { value: \"size\", label: \"size\" },\r\n        { value: \"id\", label: \"id\" },\r\n    ]\r\n\r\n    const changeOrder = (option) => {\r\n        dispatch(setSortMethod(option.value))\r\n        dispatch(setListSize(20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"orderDrinksBy\" className=\"menuItem\">\r\n            <Select\r\n                placeholder={\"sort drinks by\"}\r\n                options={options}\r\n                onChange={(option) => changeOrder(option)}\r\n                isSearchable={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToggleAlcohol = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isAlcoholic = useSelector(state => state.sortOptions.toggleAlcoholic)\r\n\r\n    const toggleAlcohol = () => {\r\n        dispatch(toggleAlcoholic())\r\n        dispatch(setListSize(20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"alcoholToggle\" className=\"menuItem\">\r\n            <button onClick={() => toggleAlcohol()}>showing {isAlcoholic ? \"alcoholic\":\"non-alcoholic\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToggleOrder = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDirection = useSelector(state => state.sortOptions.toggleOrder) //asc=true, desc=false\r\n\r\n    const toggle = () => {\r\n        dispatch(toggleOrder())\r\n        dispatch(setListSize(20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"orderToggle\" className=\"menuItem\">\r\n            <button onClick={() => toggle()}>order: {orderDirection ? \"ascending\":\"descending\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SearchBar = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSearchChange = (event) => {\r\n        event.preventDefault()\r\n        //console.log(`search: ${event.target.value}`)\r\n        dispatch(filterSearch(event.target.value))\r\n    }\r\n\r\n    return (\r\n        <input\r\n            id=\"searchInput\"\r\n            className=\"menuItem\"\r\n            type=\"text\"\r\n            onChange={(e) => handleSearchChange(e)}\r\n            placeholder=\"search\"\r\n        />\r\n    )\r\n}\r\n\r\nconst LastFetched = () => {\r\n    const dateString = useSelector(state => state.date)\r\n    const date = new Date(dateString)\r\n    return (\r\n        <div id=\"lastFetched\" className=\"menuItem\">\r\n            <div>\r\n                Information last fetched:\r\n            </div>\r\n            <div>\r\n                {date.toLocaleString()} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div id=\"menuContainer\">\r\n            <SearchBar />\r\n            <OrderByButtons />\r\n            <ToggleOrder />\r\n            <ToggleAlcohol />\r\n            <LastFetched />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from \"react\"\r\nimport ScrollToTop from \"react-scroll-up\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { setListSize } from \"../reducers/listSizeReducer\"\r\n\r\nconst ScrollToTopButton = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonStyle = {\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        height: \"40px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#386292\",\r\n        transitionDuration: '0.2s',\r\n    }\r\n\r\n    const spanStyle = {\r\n        color: \"white\",\r\n    }\r\n\r\n    return (\r\n        <ScrollToTop\r\n            showUnder={2500}\r\n            style={buttonStyle}\r\n            onHide={() => dispatch(setListSize(20))}\r\n            duration={400}\r\n        >\r\n            <span style={spanStyle}>back to top</span>\r\n        </ScrollToTop>\r\n    )\r\n}\r\n\r\nexport default ScrollToTopButton","import { initializeItems } from \"./reducers/itemReducer\"\r\nimport { initializeDate } from \"./reducers/dateReducer\";\r\nimport { setListSize } from \"./reducers/listSizeReducer\"\r\nimport { setSortMethod } from \"./reducers/sortReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\";\r\n\r\nimport AlkoButtons from \"./components/AlkoButtons\"\r\nimport Drinks from \"./components/Drinks\"\r\nimport Menu from \"./components/Menu\"\r\nimport ScrollToTopButton from \"./components/ScrollToTopButton\"\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeItems())\r\n        dispatch(initializeDate())\r\n        dispatch(setListSize(20))\r\n        dispatch(setSortMethod(\"pple\"))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <AlkoButtons  />\r\n            <Drinks />\r\n            <ScrollToTopButton />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport itemReducer from \"./reducers/itemReducer\"\r\nimport listSizeReducer from \"./reducers/listSizeReducer\"\r\nimport sortReducer from './reducers/sortReducer'\r\nimport dateReducer from './reducers/dateReducer'\r\n\r\nconst reducer = combineReducers({\r\n    listSize: listSizeReducer,\r\n    items: itemReducer,\r\n    sortOptions: sortReducer,\r\n    date: dateReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}