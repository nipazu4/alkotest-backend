{"version":3,"sources":["services/dataService.js","reducers/itemReducer.js","reducers/listSizeReducer.js","reducers/sortReducer.js","selectors/drinkSelector.js","components/Drinks.js","components/Menu.js","components/ScrollToTopButton.js","reducers/dateReducer.js","App.js","store.js","index.js"],"names":["console","log","process","baseUrl","getAllDrinks","a","axios","get","response","data","drinks","getAllNonDrinks","nondrinks","getLastFetched","date","initialState","itemReducer","state","action","type","setListSize","listSize","listSizeReducer","method","toggleAlcoholic","toggleOrder","searchFilter","setSortMethod","sortReducer","toLowerCase","orderDrinks","createSelector","sortOptions","items","filter","d","name","includes","alcohol","sort","b","price","localeCompare","reverse","priceperethanolL","priceperL","size","id","slice","Drink","drink","className","style","src","imgUrl","alt","crossOrigin","width","colSpan","toFixed","manufacturer","isNaN","description","Items","dispatch","useDispatch","currentListSize","useSelector","sortedDrinks","dataLength","length","next","hasMore","endMessage","map","OrderByButtons","placeholder","options","value","label","onChange","option","changeOrder","isSearchable","ToggleAlcohol","isAlcoholic","onClick","ToggleOrder","orderDirection","SearchBar","e","event","preventDefault","target","LastFetched","dateString","Date","toLocaleString","Menu","ScrollToTopButton","showUnder","position","bottom","right","left","height","display","justifyContent","alignItems","backgroundColor","transitionDuration","onHide","duration","color","dateReducer","App","useEffect","lastFetched","JSON","stringify","Drinks","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0998539.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconsole.log(`url=${process.env.REACT_APP_BACKEND_URI}`)\r\nconst baseUrl = process.env.REACT_APP_BACKEND_URI\r\n\r\nexport const getAllDrinks = async () => {\r\n    const response = await axios.get(baseUrl+\"drinks\")\r\n    return response.data.drinks\r\n}\r\n\r\nexport const getAllNonDrinks = async () => {\r\n    const response = await axios.get(baseUrl+\"nondrinks\")\r\n    return response.data.nondrinks\r\n}\r\n\r\nexport const getLastFetched = async () => {\r\n    const response = await axios.get(baseUrl+\"date\")\r\n    return response.data.date\r\n}","import { getAllDrinks, getAllNonDrinks } from \"../services/dataService\"\r\n\r\nconst initialState = {\r\n    drinks: [],\r\n    nondrinks: []\r\n}\r\n\r\nconst itemReducer = (state = initialState, action) => {\r\n    //console.log(\"action made\")\r\n    switch(action.type) {\r\n        case \"INIT_ITEMS\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeItems = () => {\r\n    return async dispatch => { \r\n        const drinks = await getAllDrinks()\r\n        console.log(`drinks: ${drinks.length}`)\r\n\r\n        const nondrinks = await getAllNonDrinks()\r\n        console.log(`non-drinks: ${nondrinks.length}`)\r\n\r\n        dispatch({\r\n            type: \"INIT_ITEMS\",\r\n            data: {\r\n                drinks: drinks,\r\n                nondrinks: nondrinks\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default itemReducer","const listSizeReducer = (state = 5, action) => {\r\n    //console.log(`size action made`)\r\n    switch(action.type) {\r\n        case \"SET_LIST_SIZE\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setListSize = (listSize) => {\r\n    //console.log(listSize)\r\n    return {\r\n        type: \"SET_LIST_SIZE\",\r\n        data: listSize\r\n    }\r\n}\r\n\r\nexport default listSizeReducer","const initialState = {\r\n    method: \"price\",\r\n    toggleAlcoholic: true,\r\n    toggleOrder: true,\r\n    searchFilter: \"\",\r\n} //state.sortOptions rakenne\r\n\r\nconst sortReducer = (state = initialState, action) => {\r\n    //console.log(`state now: ${JSON.stringify(state)}`)\r\n\r\n    switch(action.type) {\r\n        case \"method\":\r\n            //console.log(`method: ${action.data}`)\r\n            return {\r\n                ...state,\r\n                method: action.data.toLowerCase()\r\n            }\r\n        case \"toggleAlcoholic\":\r\n            //console.log(`state.toggleAlcoholic: ${state.toggleAlcoholic}`)\r\n            return {\r\n                ...state,\r\n                toggleAlcoholic: !state.toggleAlcoholic\r\n            }\r\n        case \"toggleOrder\":\r\n            //console.log(`state.toggleOrder: ${state.toggleOrder ? \"asc\":\"desc\"}`) //asc=true, desc=false\r\n            return {\r\n                ...state,\r\n                toggleOrder: !state.toggleOrder\r\n            }\r\n        case \"filterSearch\":\r\n            //console.log(`filter now: ${state.searchFilter}`)\r\n            return {\r\n                ...state,\r\n                searchFilter: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setSortMethod = (method) => {\r\n    //console.log(`method:${method}`)\r\n    return {\r\n        type: \"method\",\r\n        data: method\r\n    }\r\n}\r\n\r\nexport const toggleAlcoholic = () => {\r\n    //console.log(`alcohol toggled`)\r\n    return {\r\n        type: \"toggleAlcoholic\"\r\n    }\r\n}\r\n\r\nexport const toggleOrder = () => {\r\n    //console.log(`order toggled`)\r\n    return {\r\n        type: \"toggleOrder\"\r\n    }\r\n}\r\n\r\nexport const filterSearch = (text) => {\r\n    return {\r\n        type: \"filterSearch\",\r\n        data: text\r\n    }\r\n}\r\n\r\nexport default sortReducer","import { createSelector } from \"reselect\"\r\n\r\nconst getDrinks = state => state.items.drinks\r\nconst getSortOptions = state => state.sortOptions\r\nconst getListSize = state => state.listSize\r\n\r\nexport const orderDrinks = createSelector(\r\n    [ getSortOptions, getDrinks, getListSize ],\r\n    (sortOptions, drinks, listSize) => {\r\n        //console.log(`sort options: ${JSON.stringify(sortOptions)}`)\r\n\r\n        //Suodatetaan hakukentän tekstin perusteella\r\n        drinks = drinks.filter(d => d.name.toLowerCase().includes(sortOptions.searchFilter.toLowerCase()))\r\n\r\n        //Suodatetaan alkoholipitoisuuden perusteella.\r\n        switch(sortOptions.toggleAlcoholic) {\r\n            case true:\r\n                drinks = drinks.filter(d => d.alcohol !== 0)\r\n                break\r\n            case false:\r\n                drinks = drinks.filter(d => d.alcohol === 0)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        //Seuraavana lajittelu valitulla tavalla\r\n        switch(sortOptions.method) {\r\n            case \"price\":\r\n                drinks = drinks.sort((a, b) => b.price - a.price)\r\n                break\r\n            case \"alcohol\":\r\n                drinks = drinks.sort((a, b) => b.alcohol - a.alcohol)\r\n                break\r\n            case \"name\":\r\n                drinks = drinks.sort((a, b) => a.name.localeCompare(b.name)).reverse()\r\n                break\r\n            case \"pple\":\r\n                drinks = drinks.sort((a, b) => b.priceperethanolL - a.priceperethanolL)\r\n                break\r\n            case \"ppl\":\r\n                drinks = drinks.sort((a, b) => b.priceperL - a.priceperL)\r\n                break\r\n            case \"size\":\r\n                drinks = drinks.sort((a, b) => b.size - a.size)\r\n                break\r\n            case \"id\":\r\n                drinks = drinks.sort((a, b) => b.id - a.id)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n\r\n        //Käännetään lista tarvittaessa\r\n        if (sortOptions.toggleOrder) {\r\n            drinks = drinks.reverse()\r\n        }\r\n\r\n        //Lopuksi määrätään listan koko\r\n        drinks = drinks.slice(0, listSize)\r\n\r\n\r\n        //ja palautetaan lajiteltu lista juomista\r\n        return drinks\r\n    }\r\n)","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport InfiniteScroll from \"react-infinite-scroll-component\"\r\nimport { orderDrinks } from \"../selectors/drinkSelector\"\r\nimport { setListSize } from \"../reducers/listSizeReducer\"\r\nimport \"../styles/drinkStyle.css\"\r\n\r\nconst Drink = ({ drink }) => {\r\n    const bgColorStyle = {\r\n    }\r\n\r\n    /*switch(drink.type.toLowerCase()) {\r\n        case \"oluet\":\r\n            bgColorStyle.backgroundColor = \"wheat\"\r\n            break\r\n        case \"punaviinit\":\r\n            bgColorStyle.backgroundColor = \"#b11226\"\r\n            break\r\n        default:\r\n            bgColorStyle.backgroundColor = \"whitesmoke\"\r\n            break\r\n    }*/\r\n\r\n    return (\r\n        <div className=\"drinkContainer\" style={bgColorStyle}>\r\n            <div className=\"drinkChildDiv drinkImg\">\r\n                <img\r\n                    src={drink.imgUrl}\r\n                    alt={drink.name}\r\n                    crossOrigin=\"anonymous\"\r\n                />\r\n            </div>\r\n            <div className=\"drinkChildDiv drinkTable\">\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{ width: \"50%\" }}/>\r\n                        <col style={{ width: \"50%\" }}/>\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"2\">{drink.name}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>price:</td>\r\n                            <td>{drink.price.toFixed(2)}€</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>alcohol:</td>\r\n                            <td>{drink.alcohol}%</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>manufacturer:</td>\r\n                            <td>{drink.manufacturer}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>volume:</td>\r\n                            <td>{drink.size} L</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>price per L of ethanol:</td>\r\n                            <td>\r\n                                {isNaN(drink.priceperethanolL) ? drink.priceperethanolL : drink.priceperethanolL.toFixed(2)}{isNaN(drink.priceperethanolL) ? \"\":\"€\"}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>type:</td>\r\n                            <td>{drink.type}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"drinkChildDiv drinkDescription\">\r\n                {drink.description}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Items = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const currentListSize = useSelector(state => state.listSize)\r\n    const sortedDrinks = useSelector(orderDrinks)\r\n    //console.log(`showing ${sortedDrinks.length} drinks`)\r\n\r\n    const showMoreDrinks = () => {\r\n        dispatch(setListSize(currentListSize + 20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"drinkList\">\r\n            <InfiniteScroll\r\n                dataLength={sortedDrinks.length}\r\n                next={showMoreDrinks}\r\n                hasMore={true}\r\n                endMessage={<h1>this is the end</h1>}\r\n            >\r\n                {sortedDrinks.map(d => \r\n                    <Drink \r\n                        drink={d}\r\n                        key={d.id}\r\n                    />  \r\n                )}\r\n            </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items","import React from \"react\"\r\nimport { filterSearch, setSortMethod, toggleAlcoholic, toggleOrder } from \"../reducers/sortReducer\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Select from \"react-select\"\r\nimport { setListSize } from \"../reducers/listSizeReducer\"\r\nimport \"../styles/Menu.css\"\r\n\r\nconst OrderByButtons = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const options = [\r\n        { value: \"name\", label: \"name\" },\r\n        { value: \"price\", label: \"price\" },\r\n        { value: \"alcohol\", label: \"alcohol content\" },\r\n        { value: \"pple\", label: \"price per litre of pure ethanol\" },\r\n        { value: \"ppl\", label: \"price per litre\" },\r\n        { value: \"size\", label: \"size\" },\r\n        { value: \"id\", label: \"id\" },\r\n    ]\r\n\r\n    const changeOrder = (option) => {\r\n        dispatch(setSortMethod(option.value))\r\n        dispatch(setListSize(20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"orderDrinksBy\" className=\"menuItem\">\r\n            <Select\r\n                placeholder={\"sort drinks by\"}\r\n                options={options}\r\n                onChange={(option) => changeOrder(option)}\r\n                isSearchable={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToggleAlcohol = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isAlcoholic = useSelector(state => state.sortOptions.toggleAlcoholic)\r\n\r\n    const toggleAlcohol = () => {\r\n        dispatch(toggleAlcoholic())\r\n        dispatch(setListSize(20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"alcoholToggle\" className=\"menuItem\">\r\n            <button onClick={() => toggleAlcohol()}>showing {isAlcoholic ? \"alcoholic\":\"non-alcoholic\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToggleOrder = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDirection = useSelector(state => state.sortOptions.toggleOrder) //asc=true, desc=false\r\n\r\n    const toggle = () => {\r\n        dispatch(toggleOrder())\r\n        dispatch(setListSize(20))\r\n    }\r\n\r\n    return (\r\n        <div id=\"orderToggle\" className=\"menuItem\">\r\n            <button onClick={() => toggle()}>order: {orderDirection ? \"ascending\":\"descending\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SearchBar = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSearchChange = (event) => {\r\n        event.preventDefault()\r\n        //console.log(`search: ${event.target.value}`)\r\n        dispatch(filterSearch(event.target.value))\r\n    }\r\n\r\n    return (\r\n        <input\r\n            id=\"searchInput\"\r\n            className=\"menuItem\"\r\n            type=\"text\"\r\n            onChange={(e) => handleSearchChange(e)}\r\n            placeholder=\"search\"\r\n        />\r\n    )\r\n}\r\n\r\nconst LastFetched = () => {\r\n    const dateString = useSelector(state => state.date)\r\n    const date = new Date(dateString)\r\n    return (\r\n        <div id=\"lastFetched\" className=\"menuItem\">\r\n            <div>\r\n                Information last fetched:\r\n            </div>\r\n            <div>\r\n                {date.toLocaleString()} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div id=\"menuContainer\">\r\n            <SearchBar />\r\n            <OrderByButtons />\r\n            <ToggleOrder />\r\n            <ToggleAlcohol />\r\n            <LastFetched />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from \"react\"\r\nimport ScrollToTop from \"react-scroll-up\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { setListSize } from \"../reducers/listSizeReducer\"\r\n\r\nconst ScrollToTopButton = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const buttonStyle = {\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        height: \"40px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#386292\",\r\n        transitionDuration: '0.2s',\r\n    }\r\n\r\n    const spanStyle = {\r\n        color: \"white\",\r\n    }\r\n\r\n    return (\r\n        <ScrollToTop\r\n            showUnder={2500}\r\n            style={buttonStyle}\r\n            onHide={() => dispatch(setListSize(20))}\r\n            duration={400}\r\n        >\r\n            <span style={spanStyle}>back to top</span>\r\n        </ScrollToTop>\r\n    )\r\n}\r\n\r\nexport default ScrollToTopButton","import { getLastFetched } from \"../services/dataService\"\r\n\r\nconst initialState = []\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"INIT_DATE\":\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeDate = () => {\r\n    return async dispatch => {\r\n        const lastFetched = await getLastFetched()\r\n        console.log(`last fetched: ${JSON.stringify(lastFetched)}`)\r\n\r\n        dispatch({\r\n            type: \"INIT_DATE\",\r\n            data: lastFetched,\r\n        })\r\n    }\r\n}\r\n\r\nexport default dateReducer","import { initializeItems } from \"./reducers/itemReducer\"\r\nimport { setListSize } from \"./reducers/listSizeReducer\"\r\nimport { setSortMethod } from \"./reducers/sortReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\";\r\n\r\nimport Drinks from \"./components/Drinks\"\r\nimport Menu from \"./components/Menu\"\r\nimport ScrollToTopButton from \"./components/ScrollToTopButton\"\r\nimport { initializeDate } from \"./reducers/dateReducer\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeItems())\r\n        dispatch(initializeDate())\r\n        dispatch(setListSize(20))\r\n        dispatch(setSortMethod(\"pple\"))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <Drinks />\r\n            <ScrollToTopButton />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport itemReducer from \"./reducers/itemReducer\"\r\nimport listSizeReducer from \"./reducers/listSizeReducer\"\r\nimport sortReducer from './reducers/sortReducer'\r\nimport dateReducer from './reducers/dateReducer'\r\n\r\nconst reducer = combineReducers({\r\n    listSize: listSizeReducer,\r\n    items: itemReducer,\r\n    sortOptions: sortReducer,\r\n    date: dateReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}